/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.xmudronc;

import java.io.IOException;

import org.jline.terminal.Terminal;
import org.jline.terminal.TerminalBuilder;
import org.jline.utils.NonBlockingReader;

public class Snajk {
    private Boolean running = false;
    private final Integer width = 40;
    private final Integer height = 20;
    private Segment mainSegment;
    private Thread input = new Thread(new Runnable() {
        @Override
        public void run() {
            Terminal terminal;
            NonBlockingReader reader;
            try {
                terminal = TerminalBuilder.builder().build();
                terminal.enterRawMode();
                reader = terminal.reader();
                if (reader != null) {
                    while (running) {
                        Integer value = reader.read();
                        if (value >= 65 && value <= 90) {
                            value += 32;
                        }
                        if (value == 113 || value == 27) {
                            running = false;
                            reader.close();
                            terminal.close();
                        } else {
                            move(value);
                        }
                    }
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    });

    public void move(Integer key) {
        switch (key) {
            case 97: //a
                if (mainSegment.getX() > 1) {
                    mainSegment.setY(mainSegment.getY() + 0);
                    mainSegment.setX(mainSegment.getX() - 1);
                    if (checkMove(mainSegment)) {
                        printSegment(mainSegment);
                    } else {
                        gover();
                    }
                }
                break;
            case 100: //d
                if (mainSegment.getX() < width) {
                    mainSegment.setY(mainSegment.getY() + 0);
                    mainSegment.setX(mainSegment.getX() + 1);
                    if (checkMove(mainSegment)) {
                        printSegment(mainSegment);
                    } else {
                        gover();
                    }
                }
                break;
            case 115: //s
                if ((mainSegment.getY() < height) || (mainSegment.getY() == height && !mainSegment.getBottom())) {
                    mainSegment.setY(mainSegment.getBottom() ? mainSegment.getY() + 1 : mainSegment.getY() + 0);
                    mainSegment.setX(mainSegment.getX() + 0);
                    mainSegment.setBottom(!mainSegment.getBottom());
                    if (checkMove(mainSegment)) {
                        printSegment(mainSegment);
                    } else {
                        gover();
                    }
                } 
                break;
            case 119: //w
                if ((mainSegment.getY() > 1) || (mainSegment.getY() == 1 && mainSegment.getBottom())) {
                    mainSegment.setY(mainSegment.getBottom() ? mainSegment.getY() + 0 : mainSegment.getY() - 1);
                    mainSegment.setX(mainSegment.getX() + 0);
                    mainSegment.setBottom(!mainSegment.getBottom());
                    if (checkMove(mainSegment)) {
                        printSegment(mainSegment);
                    } else {
                        gover();
                    }
                }
                break;
            default:
                break;
        }
    }

    public void gover() {
        System.out.print(String.format("%c[%d;%df", 0x1B, 1, 41));
        System.out.print("GOVER");
    }

    public boolean checkMove(Segment segment) {
        System.out.print(String.format("%c[%d;%df", 0x1B, 1, 1));
        System.out.print(mainSegment.getX() + " " + mainSegment.getY() + "" + mainSegment.getBottom());
        if (segment.getX() <= 1 || segment.getX() >= width || (segment.getY() <= 1 && !segment.getBottom()) || (segment.getY() >= height && segment.getBottom())) {
            return false;
        } else {
            return true;
        }
    }

    public void printToXY(Integer x, Integer y, String print, String fgr, String bgr) {
        System.out.print(String.format("%c[%d;%df", 0x1B, y, x));
        System.out.print(print);
    }

    public boolean isHalfWall(Segment segment) {
        if (segment.getY() == 1 || segment.getY() == height) {
            return true;
        } else {
            return false;
        }
    }

    public void printSegment(Segment segment) {
        if (segment != null) {
            if (isHalfWall(segment)) {
                printToXY(segment.getX(), segment.getY(), "\u2588", "fgr", "bgr");
            } else {
                printToXY(segment.getX(), segment.getY(), segment.getBottom() ? "\u2584" : "\u2580", "fgr", "bgr");
            }
            if (segment.getNext() != null) {
                printSegment(segment.getNext());
            } else {
                if (segment.getPrevBottom() && !segment.getBottom()) {
                    printToXY(segment.getPrevX(), segment.getPrevY(), " ", "fgr", "bgr");
                }
                if (segment.getY().equals(segment.getPrevY())) {
                    printToXY(segment.getPrevX(), segment.getY() + 1, " ", "fgr", "bgr");
                }
            }
        }
    }

    public void start() {
        this.running = true;
        this.input.start();
    }

    public void init() {
        System.out.print(String.format("%c[%d;%df", 0x1B, 1, 1));
        for (Integer y = 0; y < height; y++) {
            for (Integer x = 0; x < width; x++) {
                if (y == 0) {
                    System.out.print(getPlayField(x, y).equals("\u2588") ? "\u2588" : "\u2580");
                } else if (y == height - 1) {
                    System.out.print(getPlayField(x, y).equals("\u2588") ? "\u2588" : "\u2584");
                } else {
                    System.out.print(getPlayField(x, y));
                }
            }
            System.out.println();
        }
    }

    public String getPlayField(Integer x, Integer y) {
        if ((x == 0 && y == 0) || (x == width - 1 && y == 0) || (x == 0 && y == height - 1)
                || (x == width - 1 && y == height - 1)) {
            return "\u2588";
        } else {
            if (x == 0) {
                return "\u2588";
            } else if (x == width - 1) {
                return "\u2588";
            } else {
                return " ";
            }
        }
    }

    public static void main(String[] args) {
        Snajk snajk = new Snajk();
        snajk.init();
        snajk.mainSegment = new Segment(true, 2, 1);
        snajk.printSegment(snajk.mainSegment);
        snajk.start();
    }
}
